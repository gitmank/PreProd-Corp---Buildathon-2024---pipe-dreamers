services:
  web:
    container_name: pickler-app
    hostname: pickler-app
    build: ./pickler-app
    restart: on-failure
    env_file:
      - ./.env
    ports:
      - 3000:3000
    expose:
      - 3000
    networks:
      - pickler-network
    depends_on:
      - rabbitmq
      - mongo
  rabbitmq:
    container_name: pickler-queue
    hostname: pickler-queue
    image: rabbitmq
    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    ports:
      - 5672:5672 #amqp
      - 15672:15672 #http
    expose:
      - 5672
      - 15672
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.stats().ok"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - pickler-network
  mongo:
    container_name: pickler-db
    hostname: pickler-db
    image: mongo
    restart: on-failure
    expose:
      - 27017
    ports:
      - 27017:27017
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.stats().ok"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - pickler-network
  worker:
    hostname: pickler-worker
    container_name: pickler-worker
    build: ./pickler-worker
    environment:
      - MONGO_URI=mongodb://mongo
    expose:
      - 5672
      - 27017
    depends_on:
      - rabbitmq
networks:
  pickler-network:
    driver: bridge
